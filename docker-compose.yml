services:
  fastapp.example.com:
    container_name: fastapp
    build:
      context: .
      dockerfile: ./configs/fastapp/Fastapp.Dockerfile
    command: uvicorn fastapp:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - redis.example.com

  redis.example.com:
    image: redis
    container_name: redis
    ports:
      - 6379:6379

  prometheus.example.com:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus/'


  grafana.example.com:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./configs/grafana/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./configs/grafana/datasources/:/etc/grafana/provisioning/datasources/
      - ./configs/grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - prometheus.example.com

  locust.example.com:
    container_name: locust
    build:
      context: .
      dockerfile: ./configs/locust/Locust.Dockerfile
    ports:
      - "8089:8089"
    command: locust --web-port 8089 --web-host 0.0.0.0 --web-base-path '/locust'

  cadvisor.example.com:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"

  nexporter.example.com:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100

  nginx.example.com:
    image: nginx
    container_name: nginx
    volumes:
      - ./configs/nginx/reverse-proxy.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 2000:2000
    restart: always

networks:
  default: 
    name: mlops-network