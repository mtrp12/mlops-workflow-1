# server {
#     listen 2000;
#     listen [::]:2000;
#     server_name nginx.example.com;

#     # Prometheus
#     location /prometheus/ {
#         proxy_pass http://prometheus.example.com:9090/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         rewrite ^/prometheus(/.*)$ $1 break;
#     }

#     # Grafana
#     location /grafana/ {
#         proxy_pass http://grafana.example.com:3000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # Rewrite URLs in response to ensure they use the correct path
#         sub_filter 'href="/' 'href="/grafana/';
#         sub_filter 'src="/' 'src="/grafana/';
#         sub_filter 'action="/' 'action="/grafana/';
#         sub_filter_once off;
        
#         # Remove the subpath from the proxied request to avoid issues
#         rewrite ^/grafana/(.*)$ /$1 break;

#         # Ensure the Location header reflects the /locust subpath in redirects
#         proxy_redirect / /grafana/;
#         # proxy_redirect ~^(http[s]?:\/\/[^\/]+)?\/(.*)$ /grafana/$2;
#     }

#     # Locust
#     location /locust/ {
#         proxy_pass http://locust.example.com:8089/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         # Dynamically replace root references in the body
#         sub_filter 'href="/' 'href="/locust/';
#         sub_filter 'src="/' 'src="/locust/';
#         sub_filter 'action="/' 'action="/locust/';
#         sub_filter_once off;
        
#         # Remove the subpath from the proxied request to avoid issues
#         rewrite ^/locust/(.*)$ /$1 break;

#         # Ensure the Location header reflects the /locust subpath in redirects
#         proxy_redirect / /locust/;
#         # proxy_redirect ~^(http[s]?:\/\/[^\/]+)?\/(.*)$ /locust/$2;
        

#     }

#     # cAdvisor
#     location /cadvisor/ {
#         proxy_pass http://cadvisor.example.com:8080/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         rewrite ^/cadvisor(/.*)$ $1 break;
#     }

#     # Node Exporter
#     location /node-exporter/ {
#         proxy_pass http://nexporter.example.com:9100/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         rewrite ^/node-exporter(/.*)$ $1 break;
#     }
# }


# # # Complete Nginx Docker reverse proxy config file
server {
  listen 2000;
  listen [::]:2000;
  server_name nginx.example.com;

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
  }

#  location /locust/ {
#    proxy_pass http://locust.example.com:8089/locust/;
#    proxy_http_version 1.1;
#    proxy_set_header Upgrade $http_upgrade;
#    proxy_set_header Connection "upgrade";
#    proxy_set_header Host $host;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    proxy_set_header X-Forwarded-Host $host;
#    proxy_set_header X-Forwarded-Proto $scheme;
#  }

  location /grafana/ {
    proxy_pass http://grafana.example.com:3000/grafana/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /prometheus/ {
    proxy_pass http://prometheus.example.com:9090/prometheus/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /fastapp/ {
    proxy_pass http://fastapp.example.com:8000/fastapp/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

#   location /cadvisor/ {
#     proxy_pass http://cadvisor.example.com:8080/;
#   }

#   location /node-exporter/ {
#     proxy_pass http://nexporter.example.com:9100/;
#   }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
} # End of Docker Nginx reverse proxy example file